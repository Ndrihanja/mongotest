# Use root/example as user/password credentials
#version: '3.8'
#
#services:
#
#  mongo:
#    image: mongo
#    container_name: mongo_db
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: admin
#      MONGO_INITDB_ROOT_PASSWORD: admin
#    ports:
#      - 27017:27017
#    volumes:
#      - mongodata:/data/db
#
#  mongo-express:
#    image: mongo-express
#    container_name: mongo_express
#    ports:
#      - 8081:8081
#    environment:
#      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
#      ME_CONFIG_BASICAUTH: true
#      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
#      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
#      ME_CONFIG_MONGODB_SERVER: mongo
#      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
#
#
#volumes:
#  mongodata:
#    driver: local

version: "3.7"
services:
  api-service:
    image: mongo-test
    build: .
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - api-database
  api-database:
    image: "mongo:latest"
    restart: always
    expose:
      - 27017
    ports:
      - 27017:27017


#ao anaty dockerfile ty
#FROM adoptopenjdk/openjdk11:latest
#VOLUME /tmp
#ADD target/spring-boot-mongodb-docker-compose-0.0.1-SNAPSHOT.jar app.jar
#ENTRYPOINT ["java", "-jar", "/app.jar"]

#ao anaty readme ty
#docker build -t spring-boot-mongodb-docker-compose .
#docker-compose build
#docker-compose up